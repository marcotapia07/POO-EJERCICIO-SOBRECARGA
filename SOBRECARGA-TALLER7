// Clase Base - Empleado
class Empleado {
    private String nombre;
    private double salarioBase;

    public Empleado(String nombre, double salarioBase) {
        this.nombre = nombre;
        this.salarioBase = salarioBase;
    }

    public double calcularSalario() {
        return salarioBase;
    }

    // Getters y setters opcionales
    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public double getSalarioBase() {
        return salarioBase;
    }

    public void setSalarioBase(double salarioBase) {
        this.salarioBase = salarioBase;
    }
}

// Clase Derivada - Gerente
class Gerente extends Empleado {
    private double bono;

    public Gerente(String nombre, double salarioBase, double bono) {
        super(nombre, salarioBase);
        this.bono = bono;
    }

    @Override
    public double calcularSalario() {
        return super.getSalarioBase() + bono;
    }

    // Getter y setter para el bono
    public double getBono() {
        return bono;
    }

    public void setBono(double bono) {
        this.bono = bono;
    }
}

// Clase Derivada - Desarrollador
class Desarrollador extends Empleado {
    private int horasExtras;

    public Desarrollador(String nombre, double salarioBase, int horasExtras) {
        super(nombre, salarioBase);
        this.horasExtras = horasExtras;
    }

    @Override
    public double calcularSalario() {
        return super.getSalarioBase() + (horasExtras * 20); // Suponiendo $20 por hora extra
    }

    // Getter y setter para horasExtras
    public int getHorasExtras() {
        return horasExtras;
    }

    public void setHorasExtras(int horasExtras) {
        this.horasExtras = horasExtras;
    }
}

// Clase Principal - Main
public class Main {
    public static void main(String[] args) {
        // Crear instancias de Empleado, Gerente y Desarrollador
        Empleado empleado = new Empleado("Juan", 30000);
        Gerente gerente = new Gerente("Ana", 50000, 10000);
        Desarrollador desarrollador = new Desarrollador("Pedro", 40000, 10);

        // Mostrar salarios
        System.out.println("Salario de " + empleado.getNombre() + ": $" + empleado.calcularSalario());
        System.out.println("Salario de " + gerente.getNombre() + ": $" + gerente.calcularSalario());
        System.out.println("Salario de " + desarrollador.getNombre() + ": $" + desarrollador.calcularSalario());
    }
}
